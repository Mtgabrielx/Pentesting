from scapy.all import ARP, Ether, srp

def send_arp_request(target_ip, source_ip=None, source_mac=None, timeout=2):
    """
    Envia uma requisição ARP para um alvo IP e retorna as respostas.

    Args:
        target_ip (str): O endereço IP de destino para a requisição ARP.
        source_ip (str, opcional): O endereço IP de origem. Se não especificado, será usado o IP padrão da interface.
        source_mac (str, opcional): O endereço MAC de origem. Se não especificado, será usado o MAC padrão da interface.
        timeout (int, opcional): O tempo limite em segundos para aguardar a resposta.

    Returns:
        List[Packet]: Uma lista de pacotes ARP de resposta.
    """
    # Cria uma requisição ARP
    arp_request = ARP(pdst=target_ip, psrc=source_ip, hwsrc=source_mac)
    
    # Cria um quadro Ethernet com a requisição ARP
    ethernet_frame = Ether(dst='ff:ff:ff:ff:ff:ff') / arp_request
    
    # Envia a requisição ARP e aguarda as respostas
    responses, _ = srp(ethernet_frame, timeout=timeout, verbose=False)
    
    # Retorna as respostas recebidas
    return responses

# Exemplo de uso
if __name__ == "__main__":
    target_ip = "192.168.1.1"  # O IP de destino para a requisição ARP
    responses = send_arp_request(target_ip)

    # Exibir as respostas recebidas
    for response in responses:
        # Obter o pacote ARP da resposta
        arp_response = response[1]

        # Exibir o endereço MAC do alvo
        print(f"MAC address of {target_ip}: {arp_response.hwsrc}")
