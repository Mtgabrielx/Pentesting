import socket
import sys
import threading

class socket_():
    @property
    def host(self):
        return self._host

    @host.setter
    def host(self, host):
        try:
            self._host = host
        except Exception as e:
            print(e,"\nIp/Host inválido")
            
    @property
    def port():
        return int(self._port)

    @port.setter
    def port(self,port):
        try:
            port = int(port)
            if port >= 65535 or port < 0:
                raise Exception
            self._port = int(port)
        except Exception as e:
            print(e,"\nPorta inválida")
    
    def __init__(self,host,port):
        try:
            self._host = host
            self._port = int(port)
            self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

        except Exception as e:
            print(e,"\nAlgo deu errado")

    def connect_to_target(self):
        try:
            self.sock.connect((self._host,self._port))
            print(f"Conectado ao {self._host} na porta {self._port}")
            handle_msg = threading.Thread(target=self.recv_msg,args=())
            handle_msg.start()
            self.send_msg()

        except Exception as e: 
            print(e,"\nErro de conexão")

        finally:
            self.sock.close()

    def send_msg(self):
        try:
            while True:
                mensage = input("")
                self.sock.sendall(mensage.encode())
        except Exception as e:
            print(e,'\nErro ao enviar mensagem')

    def recv_msg(self):
        try:
            while True:
                msg = self.sock.recv(4096)
                print(msg.decode().strip())
        except Exception as e:
            print(e,"Erro ao receber a mensagem")

    def start_listen(self):
        try:
            self.sock.bind((self._host,self._port))
            print(f"Escutando na porta {self._port}")
            self.sock.listen(1)
            while True:
                client_sock, client_addr = self.sock.accept()
                thread_listen = threading.Thread(target=self.start_listen,args=())
                thread_listen.start()
                self.send_msg
        except Exception as e:
            print(e,"Erro ao criar escuta")

def main(): 
    try:
        listen_mod = False
        args = sys.argv
        novo_sock = socket_(args[1],args[2])
        
        if len(args) > 3:
            for i in args[3:]:
                if i in ('-l', '--listen'):
                    listen_mod = True
        if listen_mod:
            novo_sock.start_listen()
        else:
            novo_sock.connect_to_target()
    
    except KeyboardInterrupt:    
        print("\nEncerrando o servidor...")
        print("Servidor encerrado.")

main()