import requests, sys, threading, getopt, queue

def uso():
    print("")
    print("Comandos:")
    print("")
    print('-h, --help     : help')
    print("-u, --url      : url do alvo")
    print("-w, --wordlist : caminho da wordlist")
    print("-t, --thread   : nÃºmeros de threads")
    print("-r, -recursive : modo recursivo")
    print("")
    print(f"EX: python {__file__} -u url -w path_wordlist -t 10 -r")
    print("")

def thread_request(url,caminho_wordlist,multi_thread,recursive,q):
    try:
        while not q.empty():
            dir = q.get()
            temp = url+"/"+dir
            resposta = requests.get(temp)
            if resposta.status_code == 200:
                temp = temp.strip() + " ==> 200"
                print(temp)
                if recursive:
                    Dir_Scan(temp,caminho_wordlist,multi_thread,recursive)
    except Exception as e:
        print(e)

def scan(url,caminho_wordlist,multi_thread,recursive,q):
    thread_list = []
    try:
        for i in multi_thread:
            t = threading.Thread(target = thread_request, agrs = (url,caminho_wordlist,multi_thread,recursive,q))
            thread_list.append(t)
            t.start()
    except Exception as e:
        print(e)
    for t in thread_list:
        t.join()

def Dir_Scan(url,caminho_wordlist,multi_thread,recursive):
    q = queue.Queue()
    with open(caminho_wordlist,"r") as arquivo:
        linhas = arquivo.readlines()
        for linha in linhas:
            q.put(linha)
    scan(url,caminho_wordlist,multi_thread,recursive,q)

def main():
    url = ''
    wordlist = ''
    thread = 5
    recursive = False
    opts,args = getopt.getopt(sys.argv[1:],"u:w:t:rh",['--url=','--wordlist=','--thread=','recursive','--help'])
    try:
        for command,arg in opts:
            if command in ('-h','--help'):
                raise Exception
            elif command in ('-u','--url'):
                url = arg
            elif command in ('-w','--wordlist'):
                wordlist = arg
            elif command in ('-t','--thread'):
                thread = arg
            elif command in ('-r','--recursive'):
                recursive = True
            else:
                raise Exception
        DSn = Dir_Scan(url,wordlist,thread,recursive)
        DSn.init_scan()
    except Exception as e:
        uso()
        print(e)

main()